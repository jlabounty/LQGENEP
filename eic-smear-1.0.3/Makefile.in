# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@

# Add the PYTHIA-dependent source files.
@ENABLE_PYTHIA6_SUPPORT_TRUE@am__append_1 = \
@ENABLE_PYTHIA6_SUPPORT_TRUE@src/erhic/Pythia6.cxx \
@ENABLE_PYTHIA6_SUPPORT_TRUE@src/erhic/Pythia6EventBuilder.cxx \
@ENABLE_PYTHIA6_SUPPORT_TRUE@src/erhic/Pythia6ParticleBuilder.cxx \
@ENABLE_PYTHIA6_SUPPORT_TRUE@src/hadronic/EventMC.cxx \
@ENABLE_PYTHIA6_SUPPORT_TRUE@src/hadronic/EventPythia.cxx \
@ENABLE_PYTHIA6_SUPPORT_TRUE@src/hadronic/EventSmear.cxx \
@ENABLE_PYTHIA6_SUPPORT_TRUE@src/hadronic/ParticleMC.cxx \
@ENABLE_PYTHIA6_SUPPORT_TRUE@src/hadronic/Pythia6EventFactory.cxx \
@ENABLE_PYTHIA6_SUPPORT_TRUE@cint/hadronicLinkDef.h \
@ENABLE_PYTHIA6_SUPPORT_TRUE@cint/hadronicDict.cxx \
@ENABLE_PYTHIA6_SUPPORT_TRUE@cint/LinkDefPythia.h \
@ENABLE_PYTHIA6_SUPPORT_TRUE@cint/pythiaDict.cxx


# In the smearing routine we need to be able to turn
# on and off support for smearing hadronic events.
# Turn on WITH_PYTHIA6 to allow conditional compilation.
@ENABLE_PYTHIA6_SUPPORT_TRUE@am__append_2 = -DWITH_PYTHIA6

# Link against the PYTHIA library.
@ENABLE_PYTHIA6_SUPPORT_TRUE@am__append_3 = @PYTHIA6_LIBS@
subdir = .
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) \
	$(srcdir)/config.h.in depcomp $(eicsmearinclude_HEADERS) \
	$(erhicinclude_HEADERS) $(am__hadronicinclude_HEADERS_DIST) \
	$(am__pythiainclude_HEADERS_DIST) $(smearinclude_HEADERS) \
	AUTHORS ChangeLog NEWS README ar-lib compile config.guess \
	config.sub install-sh missing ltmain.sh
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(eicsmearincludedir)" \
	"$(DESTDIR)$(erhicincludedir)" \
	"$(DESTDIR)$(hadronicincludedir)" \
	"$(DESTDIR)$(pythiaincludedir)" "$(DESTDIR)$(smearincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libeicsmear_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__libeicsmear_la_SOURCES_DIST = src/erhic/BeamParticles.cxx \
	src/erhic/BuildTree.cxx src/erhic/EventDis.cxx \
	src/erhic/EventDjangoh.cxx src/erhic/EventDpmjet.cxx \
	src/erhic/EventFactory.cxx src/erhic/EventGmcTrans.cxx \
	src/erhic/EventMC.cxx src/erhic/EventMilou.cxx \
	src/erhic/EventPepsi.cxx src/erhic/EventPythia.cxx \
	src/erhic/EventRapgap.cxx src/erhic/File.cxx \
	src/erhic/Forester.cxx src/erhic/Kinematics.cxx \
	src/erhic/ParticleIdentifier.cxx src/erhic/ParticleMC.cxx \
	src/erhic/Pid.cxx src/functions.cxx src/smear/Acceptance.cxx \
	src/smear/Bremsstrahlung.cxx src/smear/Detector.cxx \
	src/smear/Device.cxx src/smear/Distributor.cxx \
	src/smear/EventDisFactory.cxx src/smear/EventSmear.cxx \
	src/smear/FormulaString.cxx src/smear/ParticleID.cxx \
	src/smear/ParticleMCS.cxx src/smear/PerfectID.cxx \
	src/smear/PlanarTracker.cxx src/smear/RadialTracker.cxx \
	src/smear/Smear.cxx src/smear/SmearTree.cxx \
	src/smear/Tracker.cxx cint/LinkDef.h cint/BuildTreeDict.cxx \
	cint/smearLinkDef.h cint/smearDict.cxx src/erhic/Pythia6.cxx \
	src/erhic/Pythia6EventBuilder.cxx \
	src/erhic/Pythia6ParticleBuilder.cxx src/hadronic/EventMC.cxx \
	src/hadronic/EventPythia.cxx src/hadronic/EventSmear.cxx \
	src/hadronic/ParticleMC.cxx \
	src/hadronic/Pythia6EventFactory.cxx cint/hadronicLinkDef.h \
	cint/hadronicDict.cxx cint/LinkDefPythia.h cint/pythiaDict.cxx
am__dirstamp = $(am__leading_dot)dirstamp
@ENABLE_PYTHIA6_SUPPORT_TRUE@am__objects_1 = src/erhic/libeicsmear_la-Pythia6.lo \
@ENABLE_PYTHIA6_SUPPORT_TRUE@	src/erhic/libeicsmear_la-Pythia6EventBuilder.lo \
@ENABLE_PYTHIA6_SUPPORT_TRUE@	src/erhic/libeicsmear_la-Pythia6ParticleBuilder.lo \
@ENABLE_PYTHIA6_SUPPORT_TRUE@	src/hadronic/libeicsmear_la-EventMC.lo \
@ENABLE_PYTHIA6_SUPPORT_TRUE@	src/hadronic/libeicsmear_la-EventPythia.lo \
@ENABLE_PYTHIA6_SUPPORT_TRUE@	src/hadronic/libeicsmear_la-EventSmear.lo \
@ENABLE_PYTHIA6_SUPPORT_TRUE@	src/hadronic/libeicsmear_la-ParticleMC.lo \
@ENABLE_PYTHIA6_SUPPORT_TRUE@	src/hadronic/libeicsmear_la-Pythia6EventFactory.lo \
@ENABLE_PYTHIA6_SUPPORT_TRUE@	cint/libeicsmear_la-hadronicDict.lo \
@ENABLE_PYTHIA6_SUPPORT_TRUE@	cint/libeicsmear_la-pythiaDict.lo
am_libeicsmear_la_OBJECTS = src/erhic/libeicsmear_la-BeamParticles.lo \
	src/erhic/libeicsmear_la-BuildTree.lo \
	src/erhic/libeicsmear_la-EventDis.lo \
	src/erhic/libeicsmear_la-EventDjangoh.lo \
	src/erhic/libeicsmear_la-EventDpmjet.lo \
	src/erhic/libeicsmear_la-EventFactory.lo \
	src/erhic/libeicsmear_la-EventGmcTrans.lo \
	src/erhic/libeicsmear_la-EventMC.lo \
	src/erhic/libeicsmear_la-EventMilou.lo \
	src/erhic/libeicsmear_la-EventPepsi.lo \
	src/erhic/libeicsmear_la-EventPythia.lo \
	src/erhic/libeicsmear_la-EventRapgap.lo \
	src/erhic/libeicsmear_la-File.lo \
	src/erhic/libeicsmear_la-Forester.lo \
	src/erhic/libeicsmear_la-Kinematics.lo \
	src/erhic/libeicsmear_la-ParticleIdentifier.lo \
	src/erhic/libeicsmear_la-ParticleMC.lo \
	src/erhic/libeicsmear_la-Pid.lo \
	src/libeicsmear_la-functions.lo \
	src/smear/libeicsmear_la-Acceptance.lo \
	src/smear/libeicsmear_la-Bremsstrahlung.lo \
	src/smear/libeicsmear_la-Detector.lo \
	src/smear/libeicsmear_la-Device.lo \
	src/smear/libeicsmear_la-Distributor.lo \
	src/smear/libeicsmear_la-EventDisFactory.lo \
	src/smear/libeicsmear_la-EventSmear.lo \
	src/smear/libeicsmear_la-FormulaString.lo \
	src/smear/libeicsmear_la-ParticleID.lo \
	src/smear/libeicsmear_la-ParticleMCS.lo \
	src/smear/libeicsmear_la-PerfectID.lo \
	src/smear/libeicsmear_la-PlanarTracker.lo \
	src/smear/libeicsmear_la-RadialTracker.lo \
	src/smear/libeicsmear_la-Smear.lo \
	src/smear/libeicsmear_la-SmearTree.lo \
	src/smear/libeicsmear_la-Tracker.lo \
	cint/libeicsmear_la-BuildTreeDict.lo \
	cint/libeicsmear_la-smearDict.lo $(am__objects_1)
libeicsmear_la_OBJECTS = $(am_libeicsmear_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libeicsmear_la_SOURCES)
DIST_SOURCES = $(am__libeicsmear_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__hadronicinclude_HEADERS_DIST =  \
	include/eicsmear/hadronic/EventMC.h \
	include/eicsmear/hadronic/EventPythia.h \
	include/eicsmear/hadronic/ParticleMC.h \
	include/eicsmear/hadronic/Pythia6EventFactory.h \
	include/eicsmear/hadronic/EventSmear.h
am__pythiainclude_HEADERS_DIST =  \
	include/eicsmear/erhic/Pythia6EventBuilder.h \
	include/eicsmear/erhic/Pythia6.h \
	include/eicsmear/erhic/Pythia6ParticleBuilder.h
HEADERS = $(eicsmearinclude_HEADERS) $(erhicinclude_HEADERS) \
	$(hadronicinclude_HEADERS) $(pythiainclude_HEADERS) \
	$(smearinclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PYTHIA6_LIBS = @PYTHIA6_LIBS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
lib_LTLIBRARIES = libeicsmear.la

# Note we list headers separately for each subdirectory so
# we can match this structure when doing make install.

# Headers in eicsmear/erhic.
erhic_headers = \
include/eicsmear/functions.h \
include/eicsmear/erhic/BeamParticles.h \
include/eicsmear/erhic/DisKinematics.h \
include/eicsmear/erhic/EventBase.h \
include/eicsmear/erhic/EventDis.h \
include/eicsmear/erhic/EventDjangoh.h \
include/eicsmear/erhic/EventDpmjet.h \
include/eicsmear/erhic/EventFactory.h \
include/eicsmear/erhic/EventGmcTrans.h \
include/eicsmear/erhic/EventMCFilterABC.h \
include/eicsmear/erhic/EventMC.h \
include/eicsmear/erhic/EventMilou.h \
include/eicsmear/erhic/EventPepsi.h \
include/eicsmear/erhic/EventPythia.h \
include/eicsmear/erhic/EventRapgap.h \
include/eicsmear/erhic/File.h \
include/eicsmear/erhic/Forester.h \
include/eicsmear/erhic/Kinematics.h \
include/eicsmear/erhic/Particle.h \
include/eicsmear/erhic/ParticleIdentifier.h \
include/eicsmear/erhic/ParticleMC.h \
include/eicsmear/erhic/Pid.h \
include/eicsmear/erhic/VirtualEvent.h \
include/eicsmear/erhic/VirtualParticle.h


# Headers in eicsmear/smear.
smear_headers = \
include/eicsmear/smear/Acceptance.h \
include/eicsmear/smear/Bremsstrahlung.h \
include/eicsmear/smear/Detector.h \
include/eicsmear/smear/Device.h \
include/eicsmear/smear/Distributor.h \
include/eicsmear/smear/EventDisFactory.h \
include/eicsmear/smear/EventFactory.h \
include/eicsmear/smear/EventS.h \
include/eicsmear/smear/EventSmear.h \
include/eicsmear/smear/FormulaString.h \
include/eicsmear/smear/functions.h \
include/eicsmear/smear/ParticleID.h \
include/eicsmear/smear/ParticleMCS.h \
include/eicsmear/smear/PerfectID.h \
include/eicsmear/smear/PlanarTracker.h \
include/eicsmear/smear/RadialTracker.h \
include/eicsmear/smear/Smear.h \
include/eicsmear/smear/Smearer.h \
include/eicsmear/smear/Tracker.h


# Headers in eicsmear/hadronic (PYTHIA dependent).
hadronic_headers = \
include/eicsmear/hadronic/EventMC.h \
include/eicsmear/hadronic/EventPythia.h \
include/eicsmear/hadronic/ParticleMC.h \
include/eicsmear/hadronic/Pythia6EventFactory.h \
include/eicsmear/hadronic/EventSmear.h


# PYTHIA-dependent headers also in eicsmear/erhic.
pythia_headers = \
include/eicsmear/erhic/Pythia6EventBuilder.h \
include/eicsmear/erhic/Pythia6.h \
include/eicsmear/erhic/Pythia6ParticleBuilder.h


# All non-PYTHIA-dependent source files.
libeicsmear_la_SOURCES = src/erhic/BeamParticles.cxx \
	src/erhic/BuildTree.cxx src/erhic/EventDis.cxx \
	src/erhic/EventDjangoh.cxx src/erhic/EventDpmjet.cxx \
	src/erhic/EventFactory.cxx src/erhic/EventGmcTrans.cxx \
	src/erhic/EventMC.cxx src/erhic/EventMilou.cxx \
	src/erhic/EventPepsi.cxx src/erhic/EventPythia.cxx \
	src/erhic/EventRapgap.cxx src/erhic/File.cxx \
	src/erhic/Forester.cxx src/erhic/Kinematics.cxx \
	src/erhic/ParticleIdentifier.cxx src/erhic/ParticleMC.cxx \
	src/erhic/Pid.cxx src/functions.cxx src/smear/Acceptance.cxx \
	src/smear/Bremsstrahlung.cxx src/smear/Detector.cxx \
	src/smear/Device.cxx src/smear/Distributor.cxx \
	src/smear/EventDisFactory.cxx src/smear/EventSmear.cxx \
	src/smear/FormulaString.cxx src/smear/ParticleID.cxx \
	src/smear/ParticleMCS.cxx src/smear/PerfectID.cxx \
	src/smear/PlanarTracker.cxx src/smear/RadialTracker.cxx \
	src/smear/Smear.cxx src/smear/SmearTree.cxx \
	src/smear/Tracker.cxx cint/LinkDef.h cint/BuildTreeDict.cxx \
	cint/smearLinkDef.h cint/smearDict.cxx $(am__append_1)

# Use this construction so when we call make install
# all the files end up in the correct subdirectories.
eicsmearincludedir = $(includedir)/eicsmear
eicsmearinclude_HEADERS = include/eicsmear/functions.h
erhicincludedir = $(includedir)/eicsmear/erhic
erhicinclude_HEADERS = $(erhic_headers)
smearincludedir = $(includedir)/eicsmear/smear
smearinclude_HEADERS = $(smear_headers)

# Set default preprocessor flags.
libeicsmear_la_CPPFLAGS = -I$(top_srcdir)/include $(am__append_2)

# Link various ROOT libraries.
libeicsmear_la_LIBADD = -lCore -lCint -lRIO -lNet -lHist -lGraf \
	-lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics \
	-lMathCore -lThread -lfreetype -lm -ldl -lEG $(am__append_3)

# ------------------------------------------------
# If the user passed a PYTHIA6 library directory,
# build the PYTHIA6-dependent code.
# Add directories for PYTHIA-dependent headers (both
# in eicsmear/hadronic and eicsmear/erhic).
@ENABLE_PYTHIA6_SUPPORT_TRUE@hadronicincludedir = $(includedir)/eicsmear/hadronic
@ENABLE_PYTHIA6_SUPPORT_TRUE@hadronicinclude_HEADERS = $(hadronic_headers)
@ENABLE_PYTHIA6_SUPPORT_TRUE@pythiaincludedir = $(includedir)/eicsmear/erhic
@ENABLE_PYTHIA6_SUPPORT_TRUE@pythiainclude_HEADERS = $(pythia_headers)
EXTRA_DIST = CMakeLists.txt cmake
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cxx .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
src/erhic/$(am__dirstamp):
	@$(MKDIR_P) src/erhic
	@: > src/erhic/$(am__dirstamp)
src/erhic/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/erhic/$(DEPDIR)
	@: > src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-BeamParticles.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-BuildTree.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-EventDis.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-EventDjangoh.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-EventDpmjet.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-EventFactory.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-EventGmcTrans.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-EventMC.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-EventMilou.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-EventPepsi.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-EventPythia.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-EventRapgap.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-File.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-Forester.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-Kinematics.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-ParticleIdentifier.lo:  \
	src/erhic/$(am__dirstamp) src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-ParticleMC.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-Pid.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/libeicsmear_la-functions.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/smear/$(am__dirstamp):
	@$(MKDIR_P) src/smear
	@: > src/smear/$(am__dirstamp)
src/smear/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/smear/$(DEPDIR)
	@: > src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-Acceptance.lo: src/smear/$(am__dirstamp) \
	src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-Bremsstrahlung.lo: src/smear/$(am__dirstamp) \
	src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-Detector.lo: src/smear/$(am__dirstamp) \
	src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-Device.lo: src/smear/$(am__dirstamp) \
	src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-Distributor.lo: src/smear/$(am__dirstamp) \
	src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-EventDisFactory.lo:  \
	src/smear/$(am__dirstamp) src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-EventSmear.lo: src/smear/$(am__dirstamp) \
	src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-FormulaString.lo: src/smear/$(am__dirstamp) \
	src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-ParticleID.lo: src/smear/$(am__dirstamp) \
	src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-ParticleMCS.lo: src/smear/$(am__dirstamp) \
	src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-PerfectID.lo: src/smear/$(am__dirstamp) \
	src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-PlanarTracker.lo: src/smear/$(am__dirstamp) \
	src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-RadialTracker.lo: src/smear/$(am__dirstamp) \
	src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-Smear.lo: src/smear/$(am__dirstamp) \
	src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-SmearTree.lo: src/smear/$(am__dirstamp) \
	src/smear/$(DEPDIR)/$(am__dirstamp)
src/smear/libeicsmear_la-Tracker.lo: src/smear/$(am__dirstamp) \
	src/smear/$(DEPDIR)/$(am__dirstamp)
cint/$(am__dirstamp):
	@$(MKDIR_P) cint
	@: > cint/$(am__dirstamp)
cint/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cint/$(DEPDIR)
	@: > cint/$(DEPDIR)/$(am__dirstamp)
cint/libeicsmear_la-BuildTreeDict.lo: cint/$(am__dirstamp) \
	cint/$(DEPDIR)/$(am__dirstamp)
cint/libeicsmear_la-smearDict.lo: cint/$(am__dirstamp) \
	cint/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-Pythia6.lo: src/erhic/$(am__dirstamp) \
	src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-Pythia6EventBuilder.lo:  \
	src/erhic/$(am__dirstamp) src/erhic/$(DEPDIR)/$(am__dirstamp)
src/erhic/libeicsmear_la-Pythia6ParticleBuilder.lo:  \
	src/erhic/$(am__dirstamp) src/erhic/$(DEPDIR)/$(am__dirstamp)
src/hadronic/$(am__dirstamp):
	@$(MKDIR_P) src/hadronic
	@: > src/hadronic/$(am__dirstamp)
src/hadronic/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/hadronic/$(DEPDIR)
	@: > src/hadronic/$(DEPDIR)/$(am__dirstamp)
src/hadronic/libeicsmear_la-EventMC.lo: src/hadronic/$(am__dirstamp) \
	src/hadronic/$(DEPDIR)/$(am__dirstamp)
src/hadronic/libeicsmear_la-EventPythia.lo:  \
	src/hadronic/$(am__dirstamp) \
	src/hadronic/$(DEPDIR)/$(am__dirstamp)
src/hadronic/libeicsmear_la-EventSmear.lo:  \
	src/hadronic/$(am__dirstamp) \
	src/hadronic/$(DEPDIR)/$(am__dirstamp)
src/hadronic/libeicsmear_la-ParticleMC.lo:  \
	src/hadronic/$(am__dirstamp) \
	src/hadronic/$(DEPDIR)/$(am__dirstamp)
src/hadronic/libeicsmear_la-Pythia6EventFactory.lo:  \
	src/hadronic/$(am__dirstamp) \
	src/hadronic/$(DEPDIR)/$(am__dirstamp)
cint/libeicsmear_la-hadronicDict.lo: cint/$(am__dirstamp) \
	cint/$(DEPDIR)/$(am__dirstamp)
cint/libeicsmear_la-pythiaDict.lo: cint/$(am__dirstamp) \
	cint/$(DEPDIR)/$(am__dirstamp)

libeicsmear.la: $(libeicsmear_la_OBJECTS) $(libeicsmear_la_DEPENDENCIES) $(EXTRA_libeicsmear_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) -rpath $(libdir) $(libeicsmear_la_OBJECTS) $(libeicsmear_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f cint/*.$(OBJEXT)
	-rm -f cint/*.lo
	-rm -f src/*.$(OBJEXT)
	-rm -f src/*.lo
	-rm -f src/erhic/*.$(OBJEXT)
	-rm -f src/erhic/*.lo
	-rm -f src/hadronic/*.$(OBJEXT)
	-rm -f src/hadronic/*.lo
	-rm -f src/smear/*.$(OBJEXT)
	-rm -f src/smear/*.lo

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@cint/$(DEPDIR)/libeicsmear_la-BuildTreeDict.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cint/$(DEPDIR)/libeicsmear_la-hadronicDict.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cint/$(DEPDIR)/libeicsmear_la-pythiaDict.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cint/$(DEPDIR)/libeicsmear_la-smearDict.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libeicsmear_la-functions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-BeamParticles.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-BuildTree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-EventDis.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-EventDjangoh.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-EventDpmjet.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-EventFactory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-EventGmcTrans.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-EventMC.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-EventMilou.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-EventPepsi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-EventPythia.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-EventRapgap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-File.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-Forester.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-Kinematics.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-ParticleIdentifier.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-ParticleMC.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-Pid.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-Pythia6.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-Pythia6EventBuilder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/erhic/$(DEPDIR)/libeicsmear_la-Pythia6ParticleBuilder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/hadronic/$(DEPDIR)/libeicsmear_la-EventMC.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/hadronic/$(DEPDIR)/libeicsmear_la-EventPythia.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/hadronic/$(DEPDIR)/libeicsmear_la-EventSmear.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/hadronic/$(DEPDIR)/libeicsmear_la-ParticleMC.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/hadronic/$(DEPDIR)/libeicsmear_la-Pythia6EventFactory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-Acceptance.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-Bremsstrahlung.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-Detector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-Device.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-Distributor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-EventDisFactory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-EventSmear.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-FormulaString.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-ParticleID.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-ParticleMCS.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-PerfectID.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-PlanarTracker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-RadialTracker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-Smear.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-SmearTree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/smear/$(DEPDIR)/libeicsmear_la-Tracker.Plo@am__quote@

.cxx.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

src/erhic/libeicsmear_la-BeamParticles.lo: src/erhic/BeamParticles.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-BeamParticles.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-BeamParticles.Tpo -c -o src/erhic/libeicsmear_la-BeamParticles.lo `test -f 'src/erhic/BeamParticles.cxx' || echo '$(srcdir)/'`src/erhic/BeamParticles.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-BeamParticles.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-BeamParticles.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/BeamParticles.cxx' object='src/erhic/libeicsmear_la-BeamParticles.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-BeamParticles.lo `test -f 'src/erhic/BeamParticles.cxx' || echo '$(srcdir)/'`src/erhic/BeamParticles.cxx

src/erhic/libeicsmear_la-BuildTree.lo: src/erhic/BuildTree.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-BuildTree.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-BuildTree.Tpo -c -o src/erhic/libeicsmear_la-BuildTree.lo `test -f 'src/erhic/BuildTree.cxx' || echo '$(srcdir)/'`src/erhic/BuildTree.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-BuildTree.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-BuildTree.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/BuildTree.cxx' object='src/erhic/libeicsmear_la-BuildTree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-BuildTree.lo `test -f 'src/erhic/BuildTree.cxx' || echo '$(srcdir)/'`src/erhic/BuildTree.cxx

src/erhic/libeicsmear_la-EventDis.lo: src/erhic/EventDis.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-EventDis.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-EventDis.Tpo -c -o src/erhic/libeicsmear_la-EventDis.lo `test -f 'src/erhic/EventDis.cxx' || echo '$(srcdir)/'`src/erhic/EventDis.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-EventDis.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-EventDis.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/EventDis.cxx' object='src/erhic/libeicsmear_la-EventDis.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-EventDis.lo `test -f 'src/erhic/EventDis.cxx' || echo '$(srcdir)/'`src/erhic/EventDis.cxx

src/erhic/libeicsmear_la-EventDjangoh.lo: src/erhic/EventDjangoh.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-EventDjangoh.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-EventDjangoh.Tpo -c -o src/erhic/libeicsmear_la-EventDjangoh.lo `test -f 'src/erhic/EventDjangoh.cxx' || echo '$(srcdir)/'`src/erhic/EventDjangoh.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-EventDjangoh.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-EventDjangoh.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/EventDjangoh.cxx' object='src/erhic/libeicsmear_la-EventDjangoh.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-EventDjangoh.lo `test -f 'src/erhic/EventDjangoh.cxx' || echo '$(srcdir)/'`src/erhic/EventDjangoh.cxx

src/erhic/libeicsmear_la-EventDpmjet.lo: src/erhic/EventDpmjet.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-EventDpmjet.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-EventDpmjet.Tpo -c -o src/erhic/libeicsmear_la-EventDpmjet.lo `test -f 'src/erhic/EventDpmjet.cxx' || echo '$(srcdir)/'`src/erhic/EventDpmjet.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-EventDpmjet.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-EventDpmjet.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/EventDpmjet.cxx' object='src/erhic/libeicsmear_la-EventDpmjet.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-EventDpmjet.lo `test -f 'src/erhic/EventDpmjet.cxx' || echo '$(srcdir)/'`src/erhic/EventDpmjet.cxx

src/erhic/libeicsmear_la-EventFactory.lo: src/erhic/EventFactory.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-EventFactory.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-EventFactory.Tpo -c -o src/erhic/libeicsmear_la-EventFactory.lo `test -f 'src/erhic/EventFactory.cxx' || echo '$(srcdir)/'`src/erhic/EventFactory.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-EventFactory.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-EventFactory.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/EventFactory.cxx' object='src/erhic/libeicsmear_la-EventFactory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-EventFactory.lo `test -f 'src/erhic/EventFactory.cxx' || echo '$(srcdir)/'`src/erhic/EventFactory.cxx

src/erhic/libeicsmear_la-EventGmcTrans.lo: src/erhic/EventGmcTrans.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-EventGmcTrans.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-EventGmcTrans.Tpo -c -o src/erhic/libeicsmear_la-EventGmcTrans.lo `test -f 'src/erhic/EventGmcTrans.cxx' || echo '$(srcdir)/'`src/erhic/EventGmcTrans.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-EventGmcTrans.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-EventGmcTrans.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/EventGmcTrans.cxx' object='src/erhic/libeicsmear_la-EventGmcTrans.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-EventGmcTrans.lo `test -f 'src/erhic/EventGmcTrans.cxx' || echo '$(srcdir)/'`src/erhic/EventGmcTrans.cxx

src/erhic/libeicsmear_la-EventMC.lo: src/erhic/EventMC.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-EventMC.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-EventMC.Tpo -c -o src/erhic/libeicsmear_la-EventMC.lo `test -f 'src/erhic/EventMC.cxx' || echo '$(srcdir)/'`src/erhic/EventMC.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-EventMC.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-EventMC.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/EventMC.cxx' object='src/erhic/libeicsmear_la-EventMC.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-EventMC.lo `test -f 'src/erhic/EventMC.cxx' || echo '$(srcdir)/'`src/erhic/EventMC.cxx

src/erhic/libeicsmear_la-EventMilou.lo: src/erhic/EventMilou.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-EventMilou.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-EventMilou.Tpo -c -o src/erhic/libeicsmear_la-EventMilou.lo `test -f 'src/erhic/EventMilou.cxx' || echo '$(srcdir)/'`src/erhic/EventMilou.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-EventMilou.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-EventMilou.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/EventMilou.cxx' object='src/erhic/libeicsmear_la-EventMilou.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-EventMilou.lo `test -f 'src/erhic/EventMilou.cxx' || echo '$(srcdir)/'`src/erhic/EventMilou.cxx

src/erhic/libeicsmear_la-EventPepsi.lo: src/erhic/EventPepsi.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-EventPepsi.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-EventPepsi.Tpo -c -o src/erhic/libeicsmear_la-EventPepsi.lo `test -f 'src/erhic/EventPepsi.cxx' || echo '$(srcdir)/'`src/erhic/EventPepsi.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-EventPepsi.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-EventPepsi.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/EventPepsi.cxx' object='src/erhic/libeicsmear_la-EventPepsi.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-EventPepsi.lo `test -f 'src/erhic/EventPepsi.cxx' || echo '$(srcdir)/'`src/erhic/EventPepsi.cxx

src/erhic/libeicsmear_la-EventPythia.lo: src/erhic/EventPythia.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-EventPythia.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-EventPythia.Tpo -c -o src/erhic/libeicsmear_la-EventPythia.lo `test -f 'src/erhic/EventPythia.cxx' || echo '$(srcdir)/'`src/erhic/EventPythia.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-EventPythia.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-EventPythia.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/EventPythia.cxx' object='src/erhic/libeicsmear_la-EventPythia.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-EventPythia.lo `test -f 'src/erhic/EventPythia.cxx' || echo '$(srcdir)/'`src/erhic/EventPythia.cxx

src/erhic/libeicsmear_la-EventRapgap.lo: src/erhic/EventRapgap.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-EventRapgap.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-EventRapgap.Tpo -c -o src/erhic/libeicsmear_la-EventRapgap.lo `test -f 'src/erhic/EventRapgap.cxx' || echo '$(srcdir)/'`src/erhic/EventRapgap.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-EventRapgap.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-EventRapgap.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/EventRapgap.cxx' object='src/erhic/libeicsmear_la-EventRapgap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-EventRapgap.lo `test -f 'src/erhic/EventRapgap.cxx' || echo '$(srcdir)/'`src/erhic/EventRapgap.cxx

src/erhic/libeicsmear_la-File.lo: src/erhic/File.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-File.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-File.Tpo -c -o src/erhic/libeicsmear_la-File.lo `test -f 'src/erhic/File.cxx' || echo '$(srcdir)/'`src/erhic/File.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-File.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-File.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/File.cxx' object='src/erhic/libeicsmear_la-File.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-File.lo `test -f 'src/erhic/File.cxx' || echo '$(srcdir)/'`src/erhic/File.cxx

src/erhic/libeicsmear_la-Forester.lo: src/erhic/Forester.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-Forester.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-Forester.Tpo -c -o src/erhic/libeicsmear_la-Forester.lo `test -f 'src/erhic/Forester.cxx' || echo '$(srcdir)/'`src/erhic/Forester.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-Forester.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-Forester.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/Forester.cxx' object='src/erhic/libeicsmear_la-Forester.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-Forester.lo `test -f 'src/erhic/Forester.cxx' || echo '$(srcdir)/'`src/erhic/Forester.cxx

src/erhic/libeicsmear_la-Kinematics.lo: src/erhic/Kinematics.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-Kinematics.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-Kinematics.Tpo -c -o src/erhic/libeicsmear_la-Kinematics.lo `test -f 'src/erhic/Kinematics.cxx' || echo '$(srcdir)/'`src/erhic/Kinematics.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-Kinematics.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-Kinematics.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/Kinematics.cxx' object='src/erhic/libeicsmear_la-Kinematics.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-Kinematics.lo `test -f 'src/erhic/Kinematics.cxx' || echo '$(srcdir)/'`src/erhic/Kinematics.cxx

src/erhic/libeicsmear_la-ParticleIdentifier.lo: src/erhic/ParticleIdentifier.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-ParticleIdentifier.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-ParticleIdentifier.Tpo -c -o src/erhic/libeicsmear_la-ParticleIdentifier.lo `test -f 'src/erhic/ParticleIdentifier.cxx' || echo '$(srcdir)/'`src/erhic/ParticleIdentifier.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-ParticleIdentifier.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-ParticleIdentifier.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/ParticleIdentifier.cxx' object='src/erhic/libeicsmear_la-ParticleIdentifier.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-ParticleIdentifier.lo `test -f 'src/erhic/ParticleIdentifier.cxx' || echo '$(srcdir)/'`src/erhic/ParticleIdentifier.cxx

src/erhic/libeicsmear_la-ParticleMC.lo: src/erhic/ParticleMC.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-ParticleMC.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-ParticleMC.Tpo -c -o src/erhic/libeicsmear_la-ParticleMC.lo `test -f 'src/erhic/ParticleMC.cxx' || echo '$(srcdir)/'`src/erhic/ParticleMC.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-ParticleMC.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-ParticleMC.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/ParticleMC.cxx' object='src/erhic/libeicsmear_la-ParticleMC.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-ParticleMC.lo `test -f 'src/erhic/ParticleMC.cxx' || echo '$(srcdir)/'`src/erhic/ParticleMC.cxx

src/erhic/libeicsmear_la-Pid.lo: src/erhic/Pid.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-Pid.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-Pid.Tpo -c -o src/erhic/libeicsmear_la-Pid.lo `test -f 'src/erhic/Pid.cxx' || echo '$(srcdir)/'`src/erhic/Pid.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-Pid.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-Pid.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/Pid.cxx' object='src/erhic/libeicsmear_la-Pid.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-Pid.lo `test -f 'src/erhic/Pid.cxx' || echo '$(srcdir)/'`src/erhic/Pid.cxx

src/libeicsmear_la-functions.lo: src/functions.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libeicsmear_la-functions.lo -MD -MP -MF src/$(DEPDIR)/libeicsmear_la-functions.Tpo -c -o src/libeicsmear_la-functions.lo `test -f 'src/functions.cxx' || echo '$(srcdir)/'`src/functions.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libeicsmear_la-functions.Tpo src/$(DEPDIR)/libeicsmear_la-functions.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/functions.cxx' object='src/libeicsmear_la-functions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libeicsmear_la-functions.lo `test -f 'src/functions.cxx' || echo '$(srcdir)/'`src/functions.cxx

src/smear/libeicsmear_la-Acceptance.lo: src/smear/Acceptance.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-Acceptance.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-Acceptance.Tpo -c -o src/smear/libeicsmear_la-Acceptance.lo `test -f 'src/smear/Acceptance.cxx' || echo '$(srcdir)/'`src/smear/Acceptance.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-Acceptance.Tpo src/smear/$(DEPDIR)/libeicsmear_la-Acceptance.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/Acceptance.cxx' object='src/smear/libeicsmear_la-Acceptance.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-Acceptance.lo `test -f 'src/smear/Acceptance.cxx' || echo '$(srcdir)/'`src/smear/Acceptance.cxx

src/smear/libeicsmear_la-Bremsstrahlung.lo: src/smear/Bremsstrahlung.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-Bremsstrahlung.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-Bremsstrahlung.Tpo -c -o src/smear/libeicsmear_la-Bremsstrahlung.lo `test -f 'src/smear/Bremsstrahlung.cxx' || echo '$(srcdir)/'`src/smear/Bremsstrahlung.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-Bremsstrahlung.Tpo src/smear/$(DEPDIR)/libeicsmear_la-Bremsstrahlung.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/Bremsstrahlung.cxx' object='src/smear/libeicsmear_la-Bremsstrahlung.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-Bremsstrahlung.lo `test -f 'src/smear/Bremsstrahlung.cxx' || echo '$(srcdir)/'`src/smear/Bremsstrahlung.cxx

src/smear/libeicsmear_la-Detector.lo: src/smear/Detector.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-Detector.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-Detector.Tpo -c -o src/smear/libeicsmear_la-Detector.lo `test -f 'src/smear/Detector.cxx' || echo '$(srcdir)/'`src/smear/Detector.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-Detector.Tpo src/smear/$(DEPDIR)/libeicsmear_la-Detector.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/Detector.cxx' object='src/smear/libeicsmear_la-Detector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-Detector.lo `test -f 'src/smear/Detector.cxx' || echo '$(srcdir)/'`src/smear/Detector.cxx

src/smear/libeicsmear_la-Device.lo: src/smear/Device.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-Device.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-Device.Tpo -c -o src/smear/libeicsmear_la-Device.lo `test -f 'src/smear/Device.cxx' || echo '$(srcdir)/'`src/smear/Device.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-Device.Tpo src/smear/$(DEPDIR)/libeicsmear_la-Device.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/Device.cxx' object='src/smear/libeicsmear_la-Device.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-Device.lo `test -f 'src/smear/Device.cxx' || echo '$(srcdir)/'`src/smear/Device.cxx

src/smear/libeicsmear_la-Distributor.lo: src/smear/Distributor.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-Distributor.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-Distributor.Tpo -c -o src/smear/libeicsmear_la-Distributor.lo `test -f 'src/smear/Distributor.cxx' || echo '$(srcdir)/'`src/smear/Distributor.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-Distributor.Tpo src/smear/$(DEPDIR)/libeicsmear_la-Distributor.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/Distributor.cxx' object='src/smear/libeicsmear_la-Distributor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-Distributor.lo `test -f 'src/smear/Distributor.cxx' || echo '$(srcdir)/'`src/smear/Distributor.cxx

src/smear/libeicsmear_la-EventDisFactory.lo: src/smear/EventDisFactory.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-EventDisFactory.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-EventDisFactory.Tpo -c -o src/smear/libeicsmear_la-EventDisFactory.lo `test -f 'src/smear/EventDisFactory.cxx' || echo '$(srcdir)/'`src/smear/EventDisFactory.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-EventDisFactory.Tpo src/smear/$(DEPDIR)/libeicsmear_la-EventDisFactory.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/EventDisFactory.cxx' object='src/smear/libeicsmear_la-EventDisFactory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-EventDisFactory.lo `test -f 'src/smear/EventDisFactory.cxx' || echo '$(srcdir)/'`src/smear/EventDisFactory.cxx

src/smear/libeicsmear_la-EventSmear.lo: src/smear/EventSmear.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-EventSmear.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-EventSmear.Tpo -c -o src/smear/libeicsmear_la-EventSmear.lo `test -f 'src/smear/EventSmear.cxx' || echo '$(srcdir)/'`src/smear/EventSmear.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-EventSmear.Tpo src/smear/$(DEPDIR)/libeicsmear_la-EventSmear.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/EventSmear.cxx' object='src/smear/libeicsmear_la-EventSmear.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-EventSmear.lo `test -f 'src/smear/EventSmear.cxx' || echo '$(srcdir)/'`src/smear/EventSmear.cxx

src/smear/libeicsmear_la-FormulaString.lo: src/smear/FormulaString.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-FormulaString.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-FormulaString.Tpo -c -o src/smear/libeicsmear_la-FormulaString.lo `test -f 'src/smear/FormulaString.cxx' || echo '$(srcdir)/'`src/smear/FormulaString.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-FormulaString.Tpo src/smear/$(DEPDIR)/libeicsmear_la-FormulaString.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/FormulaString.cxx' object='src/smear/libeicsmear_la-FormulaString.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-FormulaString.lo `test -f 'src/smear/FormulaString.cxx' || echo '$(srcdir)/'`src/smear/FormulaString.cxx

src/smear/libeicsmear_la-ParticleID.lo: src/smear/ParticleID.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-ParticleID.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-ParticleID.Tpo -c -o src/smear/libeicsmear_la-ParticleID.lo `test -f 'src/smear/ParticleID.cxx' || echo '$(srcdir)/'`src/smear/ParticleID.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-ParticleID.Tpo src/smear/$(DEPDIR)/libeicsmear_la-ParticleID.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/ParticleID.cxx' object='src/smear/libeicsmear_la-ParticleID.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-ParticleID.lo `test -f 'src/smear/ParticleID.cxx' || echo '$(srcdir)/'`src/smear/ParticleID.cxx

src/smear/libeicsmear_la-ParticleMCS.lo: src/smear/ParticleMCS.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-ParticleMCS.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-ParticleMCS.Tpo -c -o src/smear/libeicsmear_la-ParticleMCS.lo `test -f 'src/smear/ParticleMCS.cxx' || echo '$(srcdir)/'`src/smear/ParticleMCS.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-ParticleMCS.Tpo src/smear/$(DEPDIR)/libeicsmear_la-ParticleMCS.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/ParticleMCS.cxx' object='src/smear/libeicsmear_la-ParticleMCS.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-ParticleMCS.lo `test -f 'src/smear/ParticleMCS.cxx' || echo '$(srcdir)/'`src/smear/ParticleMCS.cxx

src/smear/libeicsmear_la-PerfectID.lo: src/smear/PerfectID.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-PerfectID.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-PerfectID.Tpo -c -o src/smear/libeicsmear_la-PerfectID.lo `test -f 'src/smear/PerfectID.cxx' || echo '$(srcdir)/'`src/smear/PerfectID.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-PerfectID.Tpo src/smear/$(DEPDIR)/libeicsmear_la-PerfectID.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/PerfectID.cxx' object='src/smear/libeicsmear_la-PerfectID.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-PerfectID.lo `test -f 'src/smear/PerfectID.cxx' || echo '$(srcdir)/'`src/smear/PerfectID.cxx

src/smear/libeicsmear_la-PlanarTracker.lo: src/smear/PlanarTracker.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-PlanarTracker.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-PlanarTracker.Tpo -c -o src/smear/libeicsmear_la-PlanarTracker.lo `test -f 'src/smear/PlanarTracker.cxx' || echo '$(srcdir)/'`src/smear/PlanarTracker.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-PlanarTracker.Tpo src/smear/$(DEPDIR)/libeicsmear_la-PlanarTracker.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/PlanarTracker.cxx' object='src/smear/libeicsmear_la-PlanarTracker.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-PlanarTracker.lo `test -f 'src/smear/PlanarTracker.cxx' || echo '$(srcdir)/'`src/smear/PlanarTracker.cxx

src/smear/libeicsmear_la-RadialTracker.lo: src/smear/RadialTracker.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-RadialTracker.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-RadialTracker.Tpo -c -o src/smear/libeicsmear_la-RadialTracker.lo `test -f 'src/smear/RadialTracker.cxx' || echo '$(srcdir)/'`src/smear/RadialTracker.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-RadialTracker.Tpo src/smear/$(DEPDIR)/libeicsmear_la-RadialTracker.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/RadialTracker.cxx' object='src/smear/libeicsmear_la-RadialTracker.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-RadialTracker.lo `test -f 'src/smear/RadialTracker.cxx' || echo '$(srcdir)/'`src/smear/RadialTracker.cxx

src/smear/libeicsmear_la-Smear.lo: src/smear/Smear.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-Smear.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-Smear.Tpo -c -o src/smear/libeicsmear_la-Smear.lo `test -f 'src/smear/Smear.cxx' || echo '$(srcdir)/'`src/smear/Smear.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-Smear.Tpo src/smear/$(DEPDIR)/libeicsmear_la-Smear.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/Smear.cxx' object='src/smear/libeicsmear_la-Smear.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-Smear.lo `test -f 'src/smear/Smear.cxx' || echo '$(srcdir)/'`src/smear/Smear.cxx

src/smear/libeicsmear_la-SmearTree.lo: src/smear/SmearTree.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-SmearTree.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-SmearTree.Tpo -c -o src/smear/libeicsmear_la-SmearTree.lo `test -f 'src/smear/SmearTree.cxx' || echo '$(srcdir)/'`src/smear/SmearTree.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-SmearTree.Tpo src/smear/$(DEPDIR)/libeicsmear_la-SmearTree.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/SmearTree.cxx' object='src/smear/libeicsmear_la-SmearTree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-SmearTree.lo `test -f 'src/smear/SmearTree.cxx' || echo '$(srcdir)/'`src/smear/SmearTree.cxx

src/smear/libeicsmear_la-Tracker.lo: src/smear/Tracker.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/smear/libeicsmear_la-Tracker.lo -MD -MP -MF src/smear/$(DEPDIR)/libeicsmear_la-Tracker.Tpo -c -o src/smear/libeicsmear_la-Tracker.lo `test -f 'src/smear/Tracker.cxx' || echo '$(srcdir)/'`src/smear/Tracker.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/smear/$(DEPDIR)/libeicsmear_la-Tracker.Tpo src/smear/$(DEPDIR)/libeicsmear_la-Tracker.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/smear/Tracker.cxx' object='src/smear/libeicsmear_la-Tracker.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/smear/libeicsmear_la-Tracker.lo `test -f 'src/smear/Tracker.cxx' || echo '$(srcdir)/'`src/smear/Tracker.cxx

cint/libeicsmear_la-BuildTreeDict.lo: cint/BuildTreeDict.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cint/libeicsmear_la-BuildTreeDict.lo -MD -MP -MF cint/$(DEPDIR)/libeicsmear_la-BuildTreeDict.Tpo -c -o cint/libeicsmear_la-BuildTreeDict.lo `test -f 'cint/BuildTreeDict.cxx' || echo '$(srcdir)/'`cint/BuildTreeDict.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cint/$(DEPDIR)/libeicsmear_la-BuildTreeDict.Tpo cint/$(DEPDIR)/libeicsmear_la-BuildTreeDict.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cint/BuildTreeDict.cxx' object='cint/libeicsmear_la-BuildTreeDict.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cint/libeicsmear_la-BuildTreeDict.lo `test -f 'cint/BuildTreeDict.cxx' || echo '$(srcdir)/'`cint/BuildTreeDict.cxx

cint/libeicsmear_la-smearDict.lo: cint/smearDict.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cint/libeicsmear_la-smearDict.lo -MD -MP -MF cint/$(DEPDIR)/libeicsmear_la-smearDict.Tpo -c -o cint/libeicsmear_la-smearDict.lo `test -f 'cint/smearDict.cxx' || echo '$(srcdir)/'`cint/smearDict.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cint/$(DEPDIR)/libeicsmear_la-smearDict.Tpo cint/$(DEPDIR)/libeicsmear_la-smearDict.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cint/smearDict.cxx' object='cint/libeicsmear_la-smearDict.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cint/libeicsmear_la-smearDict.lo `test -f 'cint/smearDict.cxx' || echo '$(srcdir)/'`cint/smearDict.cxx

src/erhic/libeicsmear_la-Pythia6.lo: src/erhic/Pythia6.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-Pythia6.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-Pythia6.Tpo -c -o src/erhic/libeicsmear_la-Pythia6.lo `test -f 'src/erhic/Pythia6.cxx' || echo '$(srcdir)/'`src/erhic/Pythia6.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-Pythia6.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-Pythia6.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/Pythia6.cxx' object='src/erhic/libeicsmear_la-Pythia6.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-Pythia6.lo `test -f 'src/erhic/Pythia6.cxx' || echo '$(srcdir)/'`src/erhic/Pythia6.cxx

src/erhic/libeicsmear_la-Pythia6EventBuilder.lo: src/erhic/Pythia6EventBuilder.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-Pythia6EventBuilder.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-Pythia6EventBuilder.Tpo -c -o src/erhic/libeicsmear_la-Pythia6EventBuilder.lo `test -f 'src/erhic/Pythia6EventBuilder.cxx' || echo '$(srcdir)/'`src/erhic/Pythia6EventBuilder.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-Pythia6EventBuilder.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-Pythia6EventBuilder.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/Pythia6EventBuilder.cxx' object='src/erhic/libeicsmear_la-Pythia6EventBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-Pythia6EventBuilder.lo `test -f 'src/erhic/Pythia6EventBuilder.cxx' || echo '$(srcdir)/'`src/erhic/Pythia6EventBuilder.cxx

src/erhic/libeicsmear_la-Pythia6ParticleBuilder.lo: src/erhic/Pythia6ParticleBuilder.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/erhic/libeicsmear_la-Pythia6ParticleBuilder.lo -MD -MP -MF src/erhic/$(DEPDIR)/libeicsmear_la-Pythia6ParticleBuilder.Tpo -c -o src/erhic/libeicsmear_la-Pythia6ParticleBuilder.lo `test -f 'src/erhic/Pythia6ParticleBuilder.cxx' || echo '$(srcdir)/'`src/erhic/Pythia6ParticleBuilder.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/erhic/$(DEPDIR)/libeicsmear_la-Pythia6ParticleBuilder.Tpo src/erhic/$(DEPDIR)/libeicsmear_la-Pythia6ParticleBuilder.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/erhic/Pythia6ParticleBuilder.cxx' object='src/erhic/libeicsmear_la-Pythia6ParticleBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/erhic/libeicsmear_la-Pythia6ParticleBuilder.lo `test -f 'src/erhic/Pythia6ParticleBuilder.cxx' || echo '$(srcdir)/'`src/erhic/Pythia6ParticleBuilder.cxx

src/hadronic/libeicsmear_la-EventMC.lo: src/hadronic/EventMC.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/hadronic/libeicsmear_la-EventMC.lo -MD -MP -MF src/hadronic/$(DEPDIR)/libeicsmear_la-EventMC.Tpo -c -o src/hadronic/libeicsmear_la-EventMC.lo `test -f 'src/hadronic/EventMC.cxx' || echo '$(srcdir)/'`src/hadronic/EventMC.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/hadronic/$(DEPDIR)/libeicsmear_la-EventMC.Tpo src/hadronic/$(DEPDIR)/libeicsmear_la-EventMC.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/hadronic/EventMC.cxx' object='src/hadronic/libeicsmear_la-EventMC.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/hadronic/libeicsmear_la-EventMC.lo `test -f 'src/hadronic/EventMC.cxx' || echo '$(srcdir)/'`src/hadronic/EventMC.cxx

src/hadronic/libeicsmear_la-EventPythia.lo: src/hadronic/EventPythia.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/hadronic/libeicsmear_la-EventPythia.lo -MD -MP -MF src/hadronic/$(DEPDIR)/libeicsmear_la-EventPythia.Tpo -c -o src/hadronic/libeicsmear_la-EventPythia.lo `test -f 'src/hadronic/EventPythia.cxx' || echo '$(srcdir)/'`src/hadronic/EventPythia.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/hadronic/$(DEPDIR)/libeicsmear_la-EventPythia.Tpo src/hadronic/$(DEPDIR)/libeicsmear_la-EventPythia.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/hadronic/EventPythia.cxx' object='src/hadronic/libeicsmear_la-EventPythia.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/hadronic/libeicsmear_la-EventPythia.lo `test -f 'src/hadronic/EventPythia.cxx' || echo '$(srcdir)/'`src/hadronic/EventPythia.cxx

src/hadronic/libeicsmear_la-EventSmear.lo: src/hadronic/EventSmear.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/hadronic/libeicsmear_la-EventSmear.lo -MD -MP -MF src/hadronic/$(DEPDIR)/libeicsmear_la-EventSmear.Tpo -c -o src/hadronic/libeicsmear_la-EventSmear.lo `test -f 'src/hadronic/EventSmear.cxx' || echo '$(srcdir)/'`src/hadronic/EventSmear.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/hadronic/$(DEPDIR)/libeicsmear_la-EventSmear.Tpo src/hadronic/$(DEPDIR)/libeicsmear_la-EventSmear.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/hadronic/EventSmear.cxx' object='src/hadronic/libeicsmear_la-EventSmear.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/hadronic/libeicsmear_la-EventSmear.lo `test -f 'src/hadronic/EventSmear.cxx' || echo '$(srcdir)/'`src/hadronic/EventSmear.cxx

src/hadronic/libeicsmear_la-ParticleMC.lo: src/hadronic/ParticleMC.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/hadronic/libeicsmear_la-ParticleMC.lo -MD -MP -MF src/hadronic/$(DEPDIR)/libeicsmear_la-ParticleMC.Tpo -c -o src/hadronic/libeicsmear_la-ParticleMC.lo `test -f 'src/hadronic/ParticleMC.cxx' || echo '$(srcdir)/'`src/hadronic/ParticleMC.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/hadronic/$(DEPDIR)/libeicsmear_la-ParticleMC.Tpo src/hadronic/$(DEPDIR)/libeicsmear_la-ParticleMC.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/hadronic/ParticleMC.cxx' object='src/hadronic/libeicsmear_la-ParticleMC.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/hadronic/libeicsmear_la-ParticleMC.lo `test -f 'src/hadronic/ParticleMC.cxx' || echo '$(srcdir)/'`src/hadronic/ParticleMC.cxx

src/hadronic/libeicsmear_la-Pythia6EventFactory.lo: src/hadronic/Pythia6EventFactory.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/hadronic/libeicsmear_la-Pythia6EventFactory.lo -MD -MP -MF src/hadronic/$(DEPDIR)/libeicsmear_la-Pythia6EventFactory.Tpo -c -o src/hadronic/libeicsmear_la-Pythia6EventFactory.lo `test -f 'src/hadronic/Pythia6EventFactory.cxx' || echo '$(srcdir)/'`src/hadronic/Pythia6EventFactory.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/hadronic/$(DEPDIR)/libeicsmear_la-Pythia6EventFactory.Tpo src/hadronic/$(DEPDIR)/libeicsmear_la-Pythia6EventFactory.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/hadronic/Pythia6EventFactory.cxx' object='src/hadronic/libeicsmear_la-Pythia6EventFactory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/hadronic/libeicsmear_la-Pythia6EventFactory.lo `test -f 'src/hadronic/Pythia6EventFactory.cxx' || echo '$(srcdir)/'`src/hadronic/Pythia6EventFactory.cxx

cint/libeicsmear_la-hadronicDict.lo: cint/hadronicDict.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cint/libeicsmear_la-hadronicDict.lo -MD -MP -MF cint/$(DEPDIR)/libeicsmear_la-hadronicDict.Tpo -c -o cint/libeicsmear_la-hadronicDict.lo `test -f 'cint/hadronicDict.cxx' || echo '$(srcdir)/'`cint/hadronicDict.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cint/$(DEPDIR)/libeicsmear_la-hadronicDict.Tpo cint/$(DEPDIR)/libeicsmear_la-hadronicDict.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cint/hadronicDict.cxx' object='cint/libeicsmear_la-hadronicDict.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cint/libeicsmear_la-hadronicDict.lo `test -f 'cint/hadronicDict.cxx' || echo '$(srcdir)/'`cint/hadronicDict.cxx

cint/libeicsmear_la-pythiaDict.lo: cint/pythiaDict.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cint/libeicsmear_la-pythiaDict.lo -MD -MP -MF cint/$(DEPDIR)/libeicsmear_la-pythiaDict.Tpo -c -o cint/libeicsmear_la-pythiaDict.lo `test -f 'cint/pythiaDict.cxx' || echo '$(srcdir)/'`cint/pythiaDict.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) cint/$(DEPDIR)/libeicsmear_la-pythiaDict.Tpo cint/$(DEPDIR)/libeicsmear_la-pythiaDict.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='cint/pythiaDict.cxx' object='cint/libeicsmear_la-pythiaDict.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libeicsmear_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cint/libeicsmear_la-pythiaDict.lo `test -f 'cint/pythiaDict.cxx' || echo '$(srcdir)/'`cint/pythiaDict.cxx

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf cint/.libs cint/_libs
	-rm -rf src/.libs src/_libs
	-rm -rf src/erhic/.libs src/erhic/_libs
	-rm -rf src/hadronic/.libs src/hadronic/_libs
	-rm -rf src/smear/.libs src/smear/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-eicsmearincludeHEADERS: $(eicsmearinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(eicsmearinclude_HEADERS)'; test -n "$(eicsmearincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(eicsmearincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(eicsmearincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(eicsmearincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(eicsmearincludedir)" || exit $$?; \
	done

uninstall-eicsmearincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(eicsmearinclude_HEADERS)'; test -n "$(eicsmearincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(eicsmearincludedir)'; $(am__uninstall_files_from_dir)
install-erhicincludeHEADERS: $(erhicinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(erhicinclude_HEADERS)'; test -n "$(erhicincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(erhicincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(erhicincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(erhicincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(erhicincludedir)" || exit $$?; \
	done

uninstall-erhicincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(erhicinclude_HEADERS)'; test -n "$(erhicincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(erhicincludedir)'; $(am__uninstall_files_from_dir)
install-hadronicincludeHEADERS: $(hadronicinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(hadronicinclude_HEADERS)'; test -n "$(hadronicincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(hadronicincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(hadronicincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(hadronicincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(hadronicincludedir)" || exit $$?; \
	done

uninstall-hadronicincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(hadronicinclude_HEADERS)'; test -n "$(hadronicincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(hadronicincludedir)'; $(am__uninstall_files_from_dir)
install-pythiaincludeHEADERS: $(pythiainclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pythiainclude_HEADERS)'; test -n "$(pythiaincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pythiaincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pythiaincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pythiaincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pythiaincludedir)" || exit $$?; \
	done

uninstall-pythiaincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pythiainclude_HEADERS)'; test -n "$(pythiaincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pythiaincludedir)'; $(am__uninstall_files_from_dir)
install-smearincludeHEADERS: $(smearinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(smearinclude_HEADERS)'; test -n "$(smearincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(smearincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(smearincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(smearincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(smearincludedir)" || exit $$?; \
	done

uninstall-smearincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(smearinclude_HEADERS)'; test -n "$(smearincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(smearincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS) config.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(eicsmearincludedir)" "$(DESTDIR)$(erhicincludedir)" "$(DESTDIR)$(hadronicincludedir)" "$(DESTDIR)$(pythiaincludedir)" "$(DESTDIR)$(smearincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f cint/$(DEPDIR)/$(am__dirstamp)
	-rm -f cint/$(am__dirstamp)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-rm -f src/erhic/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/erhic/$(am__dirstamp)
	-rm -f src/hadronic/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/hadronic/$(am__dirstamp)
	-rm -f src/smear/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/smear/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf cint/$(DEPDIR) src/$(DEPDIR) src/erhic/$(DEPDIR) src/hadronic/$(DEPDIR) src/smear/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-eicsmearincludeHEADERS \
	install-erhicincludeHEADERS install-hadronicincludeHEADERS \
	install-pythiaincludeHEADERS install-smearincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf cint/$(DEPDIR) src/$(DEPDIR) src/erhic/$(DEPDIR) src/hadronic/$(DEPDIR) src/smear/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-eicsmearincludeHEADERS \
	uninstall-erhicincludeHEADERS uninstall-hadronicincludeHEADERS \
	uninstall-libLTLIBRARIES uninstall-pythiaincludeHEADERS \
	uninstall-smearincludeHEADERS

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-am clean \
	clean-cscope clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-local cscope cscopelist-am ctags ctags-am dist dist-all \
	dist-bzip2 dist-gzip dist-hook dist-lzip dist-shar dist-tarZ \
	dist-xz dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-eicsmearincludeHEADERS install-erhicincludeHEADERS \
	install-exec install-exec-am install-hadronicincludeHEADERS \
	install-html install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-pythiaincludeHEADERS \
	install-smearincludeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am \
	uninstall-eicsmearincludeHEADERS uninstall-erhicincludeHEADERS \
	uninstall-hadronicincludeHEADERS uninstall-libLTLIBRARIES \
	uninstall-pythiaincludeHEADERS uninstall-smearincludeHEADERS

# ------------------------------------------------

# Build ROOT CINT dictionaries separately for each component.
cint/hadronicDict.cxx: $(hadronic_headers) cint/hadronicLinkDef.h
	rootcint -f $@ -c -I$(top_srcdir)/include $^

cint/pythiaDict.cxx: $(pythia_headers) cint/LinkDefPythia.h
	rootcint -f $@ -c -I$(top_srcdir)/include $^

cint/smearDict.cxx: $(smear_headers) cint/smearLinkDef.h
	rootcint -f $@ -c -I$(top_srcdir)/include $^

cint/BuildTreeDict.cxx: $(erhic_headers) cint/LinkDef.h
	rootcint -f $@ -c -I$(top_srcdir)/include $^
dist-hook:
	rm -rf `find $(distdir) -name "*Dict*"`

clean-local:
	rm -f $(BUILT_SOURCES) cint/*Dict* .libs _libs

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
